// 3. Написать игру в которой имитируется бросание кубиков компьютером
// и пользователем. В игре 2 кубика и на каждом из них может выпасть от 1
// до 6 очков. Реализовать определение программой первого ходящего.
// Каждый делает по четыре броска.  После бросков показать,
// нарисованные символами кубики и количество очков, выпавших на них.
// После  пары бросков (бросок компьютера + бросок пользователя)
// выводить на экран промежуточный результат  – количество набранных
// очков игроком и компьютером.  В конце сообщить о том, кто выиграл по
// итогам всех бросков.

#include <iostream>
#include <ctime>
using namespace std;

int roll();

int main()
{
    // инициализация переменных и определение того кто будет ходить первым
    setlocale(LC_ALL, "Ru");
    srand(time(NULL));
    int score_pc{}, score_player{};
    int first;
    cout << "Кто ходит первым? (1 - компьютер, 2 - пользователь)" << endl;
    cin >> first;

    // вызов функции и подсчет очков
    for (int i = 0; i < 8; ++i)
    {
        if (i % 2 == 0)
        {
            if (first == 1)
            {
                score_pc += roll();
            }
            else
            {
                score_player += roll();
            }
        }
        else
        {
            if (first == 1)
            {
                score_player += roll();
            }
            else
            {
                score_pc += roll();
            }
            cout << "Промежуточный результат после " << (i + 1) / 2 << " пары бросков: " << endl;
            cout << "У компьютера " << score_pc << endl
                 << "У пользователя " << score_player << endl
                 << endl;
        }
    }

    // оглашение победителя
    if (score_pc > score_player)
    {
        cout << "Выйграл компьютер, он опередил пользователя на " << score_pc - score_player << " очков" << endl;
        cout << "Итоговый счет: " << endl
             << "Очков у компьютера: " << score_pc << endl
             << "Очков у пользователя: " << score_player << endl;
    }
    else if (score_pc < score_player)
    {
        cout << "Выйграл пользователь, он опередил компьютер на " << score_player - score_pc << " очков" << endl;
        cout << "Итоговый счет: " << endl
             << "Очков у компьютера: " << score_pc << endl
             << "Очков у пользователя: " << score_player << endl;
    }
    else
    {
        cout << "Ничья, компьютер и пользователь набрали одинаковое количество очков, а именно: " << score_pc;
    }

    return 0;
}

// реализация бросков кубиков
int roll()
{
    int number = rand() % 6 + 1;
    switch (number)
    {
    case 1:
        cout << "-----------\n"
             << "|         |\n"
             << "|    *    |\n"
             << "|         |\n"
             << "-----------\n"
             << "выпало 1\n\n";
        break;
    case 2:
        cout << "-----------\n"
             << "|      *  |\n"
             << "|         |\n"
             << "|  *      |\n"
             << "-----------\n"
             << "выпало 2\n\n";
        break;
    case 3:
        cout << "-----------\n"
             << "|      *  |\n"
             << "|    *    |\n"
             << "|  *      |\n"
             << "-----------\n"
             << "выпало 3\n\n";
        break;
    case 4:
        cout << "-----------\n"
             << "|  *   *  |\n"
             << "|         |\n"
             << "|  *   *  |\n"
             << "-----------\n"
             << "выпало 4\n\n";
        break;
    case 5:
        cout << "-----------\n"
             << "|  *   *  |\n"
             << "|    *    |\n"
             << "|  *   *  |\n"
             << "-----------\n"
             << "выпало 5\n\n";
        break;
    case 6:
        cout << "----------\n"
             << "|  *  *  |\n"
             << "|  *  *  |\n"
             << "|  *  *  |\n"
             << "----------\n"
             << "выпало 6\n\n";
        break;

    default:
        break;
    }
    return number;
}
